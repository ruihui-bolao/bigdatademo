/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.sdyc.jise.server.protocol;  
@SuppressWarnings("all")
/** 传输的抓取 Task 消息, 序列化结果 */
@org.apache.avro.specific.AvroGenerated
public class FetchTask extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5785111546531380540L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FetchTask\",\"namespace\":\"com.sdyc.jise.server.protocol\",\"doc\":\"传输的抓取 Task 消息, 序列化结果\",\"fields\":[{\"name\":\"taskId\",\"type\":\"string\",\"doc\":\"Task ID\"},{\"name\":\"message\",\"type\":\"string\",\"doc\":\"Server Message\"},{\"name\":\"success\",\"type\":\"boolean\",\"doc\":\"下载 task 是否成功\"},{\"name\":\"params\",\"type\":[{\"type\":\"map\",\"values\":\"string\"},\"null\"],\"doc\":\"Task Parameter\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Task ID */
  @Deprecated public java.lang.CharSequence taskId;
  /** Server Message */
  @Deprecated public java.lang.CharSequence message;
  /** 下载 task 是否成功 */
  @Deprecated public boolean success;
  /** Task Parameter */
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> params;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public FetchTask() {}

  /**
   * All-args constructor.
   * @param taskId Task ID
   * @param message Server Message
   * @param success 下载 task 是否成功
   * @param params Task Parameter
   */
  public FetchTask(java.lang.CharSequence taskId, java.lang.CharSequence message, java.lang.Boolean success, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> params) {
    this.taskId = taskId;
    this.message = message;
    this.success = success;
    this.params = params;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return taskId;
    case 1: return message;
    case 2: return success;
    case 3: return params;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: taskId = (java.lang.CharSequence)value$; break;
    case 1: message = (java.lang.CharSequence)value$; break;
    case 2: success = (java.lang.Boolean)value$; break;
    case 3: params = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'taskId' field.
   * @return Task ID
   */
  public java.lang.CharSequence getTaskId() {
    return taskId;
  }

  /**
   * Sets the value of the 'taskId' field.
   * Task ID
   * @param value the value to set.
   */
  public void setTaskId(java.lang.CharSequence value) {
    this.taskId = value;
  }

  /**
   * Gets the value of the 'message' field.
   * @return Server Message
   */
  public java.lang.CharSequence getMessage() {
    return message;
  }

  /**
   * Sets the value of the 'message' field.
   * Server Message
   * @param value the value to set.
   */
  public void setMessage(java.lang.CharSequence value) {
    this.message = value;
  }

  /**
   * Gets the value of the 'success' field.
   * @return 下载 task 是否成功
   */
  public java.lang.Boolean getSuccess() {
    return success;
  }

  /**
   * Sets the value of the 'success' field.
   * 下载 task 是否成功
   * @param value the value to set.
   */
  public void setSuccess(java.lang.Boolean value) {
    this.success = value;
  }

  /**
   * Gets the value of the 'params' field.
   * @return Task Parameter
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getParams() {
    return params;
  }

  /**
   * Sets the value of the 'params' field.
   * Task Parameter
   * @param value the value to set.
   */
  public void setParams(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.params = value;
  }

  /**
   * Creates a new FetchTask RecordBuilder.
   * @return A new FetchTask RecordBuilder
   */
  public static com.sdyc.jise.server.protocol.FetchTask.Builder newBuilder() {
    return new com.sdyc.jise.server.protocol.FetchTask.Builder();
  }
  
  /**
   * Creates a new FetchTask RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FetchTask RecordBuilder
   */
  public static com.sdyc.jise.server.protocol.FetchTask.Builder newBuilder(com.sdyc.jise.server.protocol.FetchTask.Builder other) {
    return new com.sdyc.jise.server.protocol.FetchTask.Builder(other);
  }
  
  /**
   * Creates a new FetchTask RecordBuilder by copying an existing FetchTask instance.
   * @param other The existing instance to copy.
   * @return A new FetchTask RecordBuilder
   */
  public static com.sdyc.jise.server.protocol.FetchTask.Builder newBuilder(com.sdyc.jise.server.protocol.FetchTask other) {
    return new com.sdyc.jise.server.protocol.FetchTask.Builder(other);
  }
  
  /**
   * RecordBuilder for FetchTask instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FetchTask>
    implements org.apache.avro.data.RecordBuilder<FetchTask> {

    /** Task ID */
    private java.lang.CharSequence taskId;
    /** Server Message */
    private java.lang.CharSequence message;
    /** 下载 task 是否成功 */
    private boolean success;
    /** Task Parameter */
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> params;

    /** Creates a new Builder */
    private Builder() {
      super(com.sdyc.jise.server.protocol.FetchTask.SCHEMA$);
    }
    
    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.sdyc.jise.server.protocol.FetchTask.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.taskId)) {
        this.taskId = data().deepCopy(fields()[0].schema(), other.taskId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.message)) {
        this.message = data().deepCopy(fields()[1].schema(), other.message);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.success)) {
        this.success = data().deepCopy(fields()[2].schema(), other.success);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.params)) {
        this.params = data().deepCopy(fields()[3].schema(), other.params);
        fieldSetFlags()[3] = true;
      }
    }
    
    /**
     * Creates a Builder by copying an existing FetchTask instance
     * @param other The existing instance to copy.
     */
    private Builder(com.sdyc.jise.server.protocol.FetchTask other) {
            super(com.sdyc.jise.server.protocol.FetchTask.SCHEMA$);
      if (isValidValue(fields()[0], other.taskId)) {
        this.taskId = data().deepCopy(fields()[0].schema(), other.taskId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.message)) {
        this.message = data().deepCopy(fields()[1].schema(), other.message);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.success)) {
        this.success = data().deepCopy(fields()[2].schema(), other.success);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.params)) {
        this.params = data().deepCopy(fields()[3].schema(), other.params);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'taskId' field.
      * Task ID
      * @return The value.
      */
    public java.lang.CharSequence getTaskId() {
      return taskId;
    }

    /**
      * Sets the value of the 'taskId' field.
      * Task ID
      * @param value The value of 'taskId'.
      * @return This builder.
      */
    public com.sdyc.jise.server.protocol.FetchTask.Builder setTaskId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.taskId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }

    /**
      * Checks whether the 'taskId' field has been set.
      * Task ID
      * @return True if the 'taskId' field has been set, false otherwise.
      */
    public boolean hasTaskId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'taskId' field.
      * Task ID
      * @return This builder.
      */
    public com.sdyc.jise.server.protocol.FetchTask.Builder clearTaskId() {
      taskId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'message' field.
      * Server Message
      * @return The value.
      */
    public java.lang.CharSequence getMessage() {
      return message;
    }

    /**
      * Sets the value of the 'message' field.
      * Server Message
      * @param value The value of 'message'.
      * @return This builder.
      */
    public com.sdyc.jise.server.protocol.FetchTask.Builder setMessage(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.message = value;
      fieldSetFlags()[1] = true;
      return this; 
    }

    /**
      * Checks whether the 'message' field has been set.
      * Server Message
      * @return True if the 'message' field has been set, false otherwise.
      */
    public boolean hasMessage() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'message' field.
      * Server Message
      * @return This builder.
      */
    public com.sdyc.jise.server.protocol.FetchTask.Builder clearMessage() {
      message = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'success' field.
      * 下载 task 是否成功
      * @return The value.
      */
    public java.lang.Boolean getSuccess() {
      return success;
    }

    /**
      * Sets the value of the 'success' field.
      * 下载 task 是否成功
      * @param value The value of 'success'.
      * @return This builder.
      */
    public com.sdyc.jise.server.protocol.FetchTask.Builder setSuccess(boolean value) {
      validate(fields()[2], value);
      this.success = value;
      fieldSetFlags()[2] = true;
      return this; 
    }

    /**
      * Checks whether the 'success' field has been set.
      * 下载 task 是否成功
      * @return True if the 'success' field has been set, false otherwise.
      */
    public boolean hasSuccess() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'success' field.
      * 下载 task 是否成功
      * @return This builder.
      */
    public com.sdyc.jise.server.protocol.FetchTask.Builder clearSuccess() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'params' field.
      * Task Parameter
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getParams() {
      return params;
    }

    /**
      * Sets the value of the 'params' field.
      * Task Parameter
      * @param value The value of 'params'.
      * @return This builder.
      */
    public com.sdyc.jise.server.protocol.FetchTask.Builder setParams(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[3], value);
      this.params = value;
      fieldSetFlags()[3] = true;
      return this; 
    }

    /**
      * Checks whether the 'params' field has been set.
      * Task Parameter
      * @return True if the 'params' field has been set, false otherwise.
      */
    public boolean hasParams() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'params' field.
      * Task Parameter
      * @return This builder.
      */
    public com.sdyc.jise.server.protocol.FetchTask.Builder clearParams() {
      params = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public FetchTask build() {
      try {
        FetchTask record = new FetchTask();
        record.taskId = fieldSetFlags()[0] ? this.taskId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.message = fieldSetFlags()[1] ? this.message : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.success = fieldSetFlags()[2] ? this.success : (java.lang.Boolean) defaultValue(fields()[2]);
        record.params = fieldSetFlags()[3] ? this.params : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);  

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);  

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
  }

}
