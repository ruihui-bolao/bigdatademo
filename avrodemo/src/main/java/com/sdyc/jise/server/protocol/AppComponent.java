/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.sdyc.jise.server.protocol;  
@SuppressWarnings("all")
/** 传输的抓取结果 Task 消息, 序列化结果 */
@org.apache.avro.specific.AvroGenerated
public class AppComponent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -9034315907518991036L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AppComponent\",\"namespace\":\"com.sdyc.jise.server.protocol\",\"doc\":\"传输的抓取结果 Task 消息, 序列化结果\",\"fields\":[{\"name\":\"appId\",\"type\":\"string\",\"doc\":\"App ID\"},{\"name\":\"version\",\"type\":\"string\",\"doc\":\"App Version\"},{\"name\":\"updateStatus\",\"type\":\"boolean\",\"doc\":\"是否有更新\"},{\"name\":\"payload\",\"type\":[\"bytes\",\"null\"],\"doc\":\"App Jar Bytes\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** App ID */
  @Deprecated public java.lang.CharSequence appId;
  /** App Version */
  @Deprecated public java.lang.CharSequence version;
  /** 是否有更新 */
  @Deprecated public boolean updateStatus;
  /** App Jar Bytes */
  @Deprecated public java.nio.ByteBuffer payload;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AppComponent() {}

  /**
   * All-args constructor.
   * @param appId App ID
   * @param version App Version
   * @param updateStatus 是否有更新
   * @param payload App Jar Bytes
   */
  public AppComponent(java.lang.CharSequence appId, java.lang.CharSequence version, java.lang.Boolean updateStatus, java.nio.ByteBuffer payload) {
    this.appId = appId;
    this.version = version;
    this.updateStatus = updateStatus;
    this.payload = payload;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return appId;
    case 1: return version;
    case 2: return updateStatus;
    case 3: return payload;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: appId = (java.lang.CharSequence)value$; break;
    case 1: version = (java.lang.CharSequence)value$; break;
    case 2: updateStatus = (java.lang.Boolean)value$; break;
    case 3: payload = (java.nio.ByteBuffer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'appId' field.
   * @return App ID
   */
  public java.lang.CharSequence getAppId() {
    return appId;
  }

  /**
   * Sets the value of the 'appId' field.
   * App ID
   * @param value the value to set.
   */
  public void setAppId(java.lang.CharSequence value) {
    this.appId = value;
  }

  /**
   * Gets the value of the 'version' field.
   * @return App Version
   */
  public java.lang.CharSequence getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * App Version
   * @param value the value to set.
   */
  public void setVersion(java.lang.CharSequence value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'updateStatus' field.
   * @return 是否有更新
   */
  public java.lang.Boolean getUpdateStatus() {
    return updateStatus;
  }

  /**
   * Sets the value of the 'updateStatus' field.
   * 是否有更新
   * @param value the value to set.
   */
  public void setUpdateStatus(java.lang.Boolean value) {
    this.updateStatus = value;
  }

  /**
   * Gets the value of the 'payload' field.
   * @return App Jar Bytes
   */
  public java.nio.ByteBuffer getPayload() {
    return payload;
  }

  /**
   * Sets the value of the 'payload' field.
   * App Jar Bytes
   * @param value the value to set.
   */
  public void setPayload(java.nio.ByteBuffer value) {
    this.payload = value;
  }

  /**
   * Creates a new AppComponent RecordBuilder.
   * @return A new AppComponent RecordBuilder
   */
  public static com.sdyc.jise.server.protocol.AppComponent.Builder newBuilder() {
    return new com.sdyc.jise.server.protocol.AppComponent.Builder();
  }
  
  /**
   * Creates a new AppComponent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AppComponent RecordBuilder
   */
  public static com.sdyc.jise.server.protocol.AppComponent.Builder newBuilder(com.sdyc.jise.server.protocol.AppComponent.Builder other) {
    return new com.sdyc.jise.server.protocol.AppComponent.Builder(other);
  }
  
  /**
   * Creates a new AppComponent RecordBuilder by copying an existing AppComponent instance.
   * @param other The existing instance to copy.
   * @return A new AppComponent RecordBuilder
   */
  public static com.sdyc.jise.server.protocol.AppComponent.Builder newBuilder(com.sdyc.jise.server.protocol.AppComponent other) {
    return new com.sdyc.jise.server.protocol.AppComponent.Builder(other);
  }
  
  /**
   * RecordBuilder for AppComponent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AppComponent>
    implements org.apache.avro.data.RecordBuilder<AppComponent> {

    /** App ID */
    private java.lang.CharSequence appId;
    /** App Version */
    private java.lang.CharSequence version;
    /** 是否有更新 */
    private boolean updateStatus;
    /** App Jar Bytes */
    private java.nio.ByteBuffer payload;

    /** Creates a new Builder */
    private Builder() {
      super(com.sdyc.jise.server.protocol.AppComponent.SCHEMA$);
    }
    
    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.sdyc.jise.server.protocol.AppComponent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.appId)) {
        this.appId = data().deepCopy(fields()[0].schema(), other.appId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.version)) {
        this.version = data().deepCopy(fields()[1].schema(), other.version);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.updateStatus)) {
        this.updateStatus = data().deepCopy(fields()[2].schema(), other.updateStatus);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.payload)) {
        this.payload = data().deepCopy(fields()[3].schema(), other.payload);
        fieldSetFlags()[3] = true;
      }
    }
    
    /**
     * Creates a Builder by copying an existing AppComponent instance
     * @param other The existing instance to copy.
     */
    private Builder(com.sdyc.jise.server.protocol.AppComponent other) {
            super(com.sdyc.jise.server.protocol.AppComponent.SCHEMA$);
      if (isValidValue(fields()[0], other.appId)) {
        this.appId = data().deepCopy(fields()[0].schema(), other.appId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.version)) {
        this.version = data().deepCopy(fields()[1].schema(), other.version);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.updateStatus)) {
        this.updateStatus = data().deepCopy(fields()[2].schema(), other.updateStatus);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.payload)) {
        this.payload = data().deepCopy(fields()[3].schema(), other.payload);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'appId' field.
      * App ID
      * @return The value.
      */
    public java.lang.CharSequence getAppId() {
      return appId;
    }

    /**
      * Sets the value of the 'appId' field.
      * App ID
      * @param value The value of 'appId'.
      * @return This builder.
      */
    public com.sdyc.jise.server.protocol.AppComponent.Builder setAppId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.appId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }

    /**
      * Checks whether the 'appId' field has been set.
      * App ID
      * @return True if the 'appId' field has been set, false otherwise.
      */
    public boolean hasAppId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'appId' field.
      * App ID
      * @return This builder.
      */
    public com.sdyc.jise.server.protocol.AppComponent.Builder clearAppId() {
      appId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'version' field.
      * App Version
      * @return The value.
      */
    public java.lang.CharSequence getVersion() {
      return version;
    }

    /**
      * Sets the value of the 'version' field.
      * App Version
      * @param value The value of 'version'.
      * @return This builder.
      */
    public com.sdyc.jise.server.protocol.AppComponent.Builder setVersion(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.version = value;
      fieldSetFlags()[1] = true;
      return this; 
    }

    /**
      * Checks whether the 'version' field has been set.
      * App Version
      * @return True if the 'version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'version' field.
      * App Version
      * @return This builder.
      */
    public com.sdyc.jise.server.protocol.AppComponent.Builder clearVersion() {
      version = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'updateStatus' field.
      * 是否有更新
      * @return The value.
      */
    public java.lang.Boolean getUpdateStatus() {
      return updateStatus;
    }

    /**
      * Sets the value of the 'updateStatus' field.
      * 是否有更新
      * @param value The value of 'updateStatus'.
      * @return This builder.
      */
    public com.sdyc.jise.server.protocol.AppComponent.Builder setUpdateStatus(boolean value) {
      validate(fields()[2], value);
      this.updateStatus = value;
      fieldSetFlags()[2] = true;
      return this; 
    }

    /**
      * Checks whether the 'updateStatus' field has been set.
      * 是否有更新
      * @return True if the 'updateStatus' field has been set, false otherwise.
      */
    public boolean hasUpdateStatus() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'updateStatus' field.
      * 是否有更新
      * @return This builder.
      */
    public com.sdyc.jise.server.protocol.AppComponent.Builder clearUpdateStatus() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'payload' field.
      * App Jar Bytes
      * @return The value.
      */
    public java.nio.ByteBuffer getPayload() {
      return payload;
    }

    /**
      * Sets the value of the 'payload' field.
      * App Jar Bytes
      * @param value The value of 'payload'.
      * @return This builder.
      */
    public com.sdyc.jise.server.protocol.AppComponent.Builder setPayload(java.nio.ByteBuffer value) {
      validate(fields()[3], value);
      this.payload = value;
      fieldSetFlags()[3] = true;
      return this; 
    }

    /**
      * Checks whether the 'payload' field has been set.
      * App Jar Bytes
      * @return True if the 'payload' field has been set, false otherwise.
      */
    public boolean hasPayload() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'payload' field.
      * App Jar Bytes
      * @return This builder.
      */
    public com.sdyc.jise.server.protocol.AppComponent.Builder clearPayload() {
      payload = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public AppComponent build() {
      try {
        AppComponent record = new AppComponent();
        record.appId = fieldSetFlags()[0] ? this.appId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.version = fieldSetFlags()[1] ? this.version : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.updateStatus = fieldSetFlags()[2] ? this.updateStatus : (java.lang.Boolean) defaultValue(fields()[2]);
        record.payload = fieldSetFlags()[3] ? this.payload : (java.nio.ByteBuffer) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);  

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);  

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
  }

}
