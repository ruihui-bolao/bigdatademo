/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.sdyc.jise.server.protocol;  
@SuppressWarnings("all")
/** 验证码 */
@org.apache.avro.specific.AvroGenerated
public class RandomCode extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8419341527187196071L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RandomCode\",\"namespace\":\"com.sdyc.jise.server.protocol\",\"doc\":\"验证码\",\"fields\":[{\"name\":\"nCaptchaId\",\"type\":\"string\",\"doc\":\"验证码 ID\"},{\"name\":\"codeString\",\"type\":\"string\",\"doc\":\"验证码\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** 验证码 ID */
  @Deprecated public java.lang.CharSequence nCaptchaId;
  /** 验证码 */
  @Deprecated public java.lang.CharSequence codeString;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public RandomCode() {}

  /**
   * All-args constructor.
   * @param nCaptchaId 验证码 ID
   * @param codeString 验证码
   */
  public RandomCode(java.lang.CharSequence nCaptchaId, java.lang.CharSequence codeString) {
    this.nCaptchaId = nCaptchaId;
    this.codeString = codeString;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return nCaptchaId;
    case 1: return codeString;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: nCaptchaId = (java.lang.CharSequence)value$; break;
    case 1: codeString = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'nCaptchaId' field.
   * @return 验证码 ID
   */
  public java.lang.CharSequence getNCaptchaId() {
    return nCaptchaId;
  }

  /**
   * Sets the value of the 'nCaptchaId' field.
   * 验证码 ID
   * @param value the value to set.
   */
  public void setNCaptchaId(java.lang.CharSequence value) {
    this.nCaptchaId = value;
  }

  /**
   * Gets the value of the 'codeString' field.
   * @return 验证码
   */
  public java.lang.CharSequence getCodeString() {
    return codeString;
  }

  /**
   * Sets the value of the 'codeString' field.
   * 验证码
   * @param value the value to set.
   */
  public void setCodeString(java.lang.CharSequence value) {
    this.codeString = value;
  }

  /**
   * Creates a new RandomCode RecordBuilder.
   * @return A new RandomCode RecordBuilder
   */
  public static com.sdyc.jise.server.protocol.RandomCode.Builder newBuilder() {
    return new com.sdyc.jise.server.protocol.RandomCode.Builder();
  }
  
  /**
   * Creates a new RandomCode RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RandomCode RecordBuilder
   */
  public static com.sdyc.jise.server.protocol.RandomCode.Builder newBuilder(com.sdyc.jise.server.protocol.RandomCode.Builder other) {
    return new com.sdyc.jise.server.protocol.RandomCode.Builder(other);
  }
  
  /**
   * Creates a new RandomCode RecordBuilder by copying an existing RandomCode instance.
   * @param other The existing instance to copy.
   * @return A new RandomCode RecordBuilder
   */
  public static com.sdyc.jise.server.protocol.RandomCode.Builder newBuilder(com.sdyc.jise.server.protocol.RandomCode other) {
    return new com.sdyc.jise.server.protocol.RandomCode.Builder(other);
  }
  
  /**
   * RecordBuilder for RandomCode instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RandomCode>
    implements org.apache.avro.data.RecordBuilder<RandomCode> {

    /** 验证码 ID */
    private java.lang.CharSequence nCaptchaId;
    /** 验证码 */
    private java.lang.CharSequence codeString;

    /** Creates a new Builder */
    private Builder() {
      super(com.sdyc.jise.server.protocol.RandomCode.SCHEMA$);
    }
    
    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.sdyc.jise.server.protocol.RandomCode.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.nCaptchaId)) {
        this.nCaptchaId = data().deepCopy(fields()[0].schema(), other.nCaptchaId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.codeString)) {
        this.codeString = data().deepCopy(fields()[1].schema(), other.codeString);
        fieldSetFlags()[1] = true;
      }
    }
    
    /**
     * Creates a Builder by copying an existing RandomCode instance
     * @param other The existing instance to copy.
     */
    private Builder(com.sdyc.jise.server.protocol.RandomCode other) {
            super(com.sdyc.jise.server.protocol.RandomCode.SCHEMA$);
      if (isValidValue(fields()[0], other.nCaptchaId)) {
        this.nCaptchaId = data().deepCopy(fields()[0].schema(), other.nCaptchaId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.codeString)) {
        this.codeString = data().deepCopy(fields()[1].schema(), other.codeString);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'nCaptchaId' field.
      * 验证码 ID
      * @return The value.
      */
    public java.lang.CharSequence getNCaptchaId() {
      return nCaptchaId;
    }

    /**
      * Sets the value of the 'nCaptchaId' field.
      * 验证码 ID
      * @param value The value of 'nCaptchaId'.
      * @return This builder.
      */
    public com.sdyc.jise.server.protocol.RandomCode.Builder setNCaptchaId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.nCaptchaId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }

    /**
      * Checks whether the 'nCaptchaId' field has been set.
      * 验证码 ID
      * @return True if the 'nCaptchaId' field has been set, false otherwise.
      */
    public boolean hasNCaptchaId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'nCaptchaId' field.
      * 验证码 ID
      * @return This builder.
      */
    public com.sdyc.jise.server.protocol.RandomCode.Builder clearNCaptchaId() {
      nCaptchaId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'codeString' field.
      * 验证码
      * @return The value.
      */
    public java.lang.CharSequence getCodeString() {
      return codeString;
    }

    /**
      * Sets the value of the 'codeString' field.
      * 验证码
      * @param value The value of 'codeString'.
      * @return This builder.
      */
    public com.sdyc.jise.server.protocol.RandomCode.Builder setCodeString(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.codeString = value;
      fieldSetFlags()[1] = true;
      return this; 
    }

    /**
      * Checks whether the 'codeString' field has been set.
      * 验证码
      * @return True if the 'codeString' field has been set, false otherwise.
      */
    public boolean hasCodeString() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'codeString' field.
      * 验证码
      * @return This builder.
      */
    public com.sdyc.jise.server.protocol.RandomCode.Builder clearCodeString() {
      codeString = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public RandomCode build() {
      try {
        RandomCode record = new RandomCode();
        record.nCaptchaId = fieldSetFlags()[0] ? this.nCaptchaId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.codeString = fieldSetFlags()[1] ? this.codeString : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);  

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);  

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
  }

}
