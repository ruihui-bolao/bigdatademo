<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd
	     ">
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="ignoreResourceNotFound" value="true" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="locations">
            <list>
                <value>classpath:redis.properties</value>
            </list>
        </property>
    </bean>
    <!-- redis template definition -->
    <bean id="stringRedisSerializer"
          class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    <bean id="valueSerializer"
          class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
    <bean id="aopJedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="${redis.host}" p:port="${redis.port}" p:usePool="true" p:timeout="60000" p:database="3">
    </bean>

    <bean id="aopRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="aopJedisConnectionFactory" />
        <property name="valueSerializer" ref="stringRedisSerializer" />
        <property name="defaultSerializer" ref="stringRedisSerializer" />
        <property name="keySerializer" ref="stringRedisSerializer" />
    </bean>

    <bean id="redisKeyBean" class="com.hui.aopredis.demo.bean.RedisKeyBean">
        <property name="ndmpFlowLastTime" value="${NDMPETL.lasttime}"/>
        <property name="ndmpFlowStartTime" value="${NDMPETL.StartTime}"/>
        <property name="ndmpFlowError" value="${NDMPETL.Error}"/>
    </bean>

    <bean id="NdmpFlowHandler" class="com.hui.aopredis.demo.aop.NdmpFlowHandler">
        <property name="redisTemplate" ref="aopRedisTemplate"/>
        <property name="redisKeyBean" ref="redisKeyBean"/>
    </bean>

    <bean id = "textManagerImpl" class="com.hui.aopredis.demo.service.TextManagerImpl"></bean>

    <aop:config>
        <aop:aspect id="ndmpEtl" ref="NdmpFlowHandler">
            <aop:pointcut id="NdmpEtlStart" expression="execution(* com.hui.aopredis.demo.service.TextManagerImpl.readText(..))"  />
            <aop:before method="doBefore" pointcut-ref="NdmpEtlStart"/>
            <aop:after-throwing method="doThrowing" pointcut-ref="NdmpEtlStart" throwing = "e"/>
        </aop:aspect>
        <aop:aspect id="ndmpEtl" ref="NdmpFlowHandler">
            <aop:pointcut id="NdmpEtlEnd" expression="execution(* com.hui.aopredis.demo.service.TextManagerImpl.showText(..))"  />
            <aop:after method="doAfter" pointcut-ref="NdmpEtlEnd"/>
            <aop:after-throwing method="doThrowing" pointcut-ref="NdmpEtlEnd" throwing="e" />
        </aop:aspect>
    </aop:config>


</beans>
